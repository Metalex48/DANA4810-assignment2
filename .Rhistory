attach(SNOWGEESE)
head(SNOWGEESE)
SNOWGEESE <- read.delim("~/7 Langara/Term 2/Quantitative DANA 4810/Assignment 2/SNOWGEESE.txt")
View(SNOWGEESE)
attach(SNOWGEESE)
head(SNOWGEESE)
# creating a scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
cor.test(x=DigEff, y=WtChange, conf.level = 0.90) # Pearson test
# dropping the "Trial" column
df <- SNOWGEESE[-c(1)]
head(df)
?lm
# creating linear model
model = lm(df, x=DigEff, y=WtChange)
# creating linear model
model = lm(df)
# creating linear model
model = lm(df~WtChange)
# creating linear model
model = lm(WtChange~DigEff)
summary(model)
model2 = lm(DigEff~WtChange)
summary(model2)
# creating linear model
model = lm(WtChange~DigEff)
summary(model)
# plotting linear model on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red")
# 90% CI for the slope
confint(model, level = 0.90)
qt(p=0.10/2, df=40, lower.tail=FALSE) # getting t-value for alpha=0.10 and df=40 to compare the t-value from Pearson test
qt(p=0.10/2, df=22, lower.tail=FALSE) # getting t-value for alpha=0.10 and df=40 to compare the t-value from Pearson test
qt(p=0.10/2, df=40, lower.tail=FALSE) # getting t-value for alpha=0.10 and df=40 to compare the t-value from Pearson test
qt(p=0.05/2, df=3, lower.tail=FALSE)
qt(p=0.10/2, df=40, lower.tail=FALSE)
##### getting CI step by step
B_0 = 0.14147
se_B0 = 0.02889
t_alp_2 = qt(p=0.10/2, df=40, lower.tail=FALSE)
UB = B_0 + se_B0*t_alp_2
LB = B_0 - se_B0*t_alp_2
# seeing how many categories for variable "Diet"
table(df$Diet)
# 90% CI for the slope
confint(model, level = 0.90)  # quick method with R
# creating linear model
model = lm(WtChange~DigEff)
summary(model)
#Prediction
?data.frame
#Prediction
New = data.frame(DigEff=c(17))
#Prediction
rm(model2)
predict(model, New)
# creating linear model
model = lm(WtChange~DigEff)
summary(model)
predict(model, New)
?predict
# plotting linear model on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red")
predict(model, New, interval="confidence",level=0.90)
predict(model413,New, interval="prediction",level=0.90)
predict(model, New, interval="prediction",level=0.90)
# plotting linear model on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red")
abline(model, col="Red", lty=1, lwd=2)
abline(model, col="Red", lty=1, lwd=3)
abline(model, col="Red", lty=1, lwd=8)
abline(model, col="Red", lty=2, lwd=8)
abline(model, col="Red", lty=3, lwd=8)
abline(model, col="Red", lty=3, lwd=1)
abline(model, col="Red", lty=3, lwd=1)
# plotting linear model on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=3, lwd=1)
# plotting linear model on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=3, lwd=2)
abline(model, col="Red", lty=4, lwd=2)
# plotting linear model on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=4, lwd=2)
abline(model, col="Red", lty=1, lwd=2)
QUAD<- seq(0,285.7,0.1) # setting the x values for the curved line
x<- seq(0,70,0.1) # setting the x values for the curved line
rm(QUAD)
lines(x, predict(model, x, interval="confidence",level=0.90))
intvl_data = data.frame(DigEff=x)
lines(x, predict(model, intvl_data=data.frame(DigEff=x), interval="confidence",level=0.90))
lines(x, predict(model,intvl_data=data.frame(DigEff=x),interval="confidence",level=0.90))
length(x)
length(intvl_data)
x<- seq(0,50,0.1) # setting the x values to plot C-Intvl and PIntvl
rm(x)
x<- seq(0,50,0.1) # setting the x values to plot C-Intvl and PIntvl
length(x)
predict(model, New, interval="confidence",level=0.90)
lines(x, x+x)
CARP <- read.delim("C:/Users/aleja/Downloads/CARP.txt")
View(CARP)
attach(CARP)
head(CARP)
plot(x=WEIGHT, y=ENE,
ylab = "ENE (in milligrams per 100 grams of body weight per day)",
xlab = "Body Weight (in in grams)",
main = "Scatterplot of ENE vs. Body Weight",
col="blue", ylim = c(0,20), xlim = c(10,400), pch=19)
abline(lm(ENE~WEIGHT), col="Red", lty=1, lwd=2)
#QuadraticTerm
modelQuad <- lm(ENE~WEIGHT+ I(WEIGHT^2))
summary(modelQuad)
QUAD<- seq(0,285.7,0.1) # setting the x values for the curved line
lines(QUAD,predict(modelQuad,newdata=data.frame(WEIGHT=QUAD)),col="red" ) # QUAD is X values, predict is Y values
?predict
y1 = predict(model, x, interval="confidence",level=0.90)
y1 = data.frame(predict(model, x, interval="confidence",level=0.90))
rm(intvl_data)
y1 <- data.frame(predict(model, x, interval="confidence",level=0.90))
predict(model, New, interval="confidence",level=0.90)
# lines(x,predict(modelQuad,newdata=data.frame(WEIGHT=QUAD)),col="red" ) # QUAD is X values, predict is Y values
t_alp_2 = qt(p=0.10/2, df=40, lower.tail=FALSE)
library("ggplot2")
intvls_df = cbind(df, pred)
pred = predict(model, interval = "prediction", level=0.90)
intvls_df = cbind(df, pred)
ggplot(intvls_df, aes(DigEff, WtChange))
ggplot(intvls_df, aes(DigEff, WtChange))+
geom_point()
ggplot(intvls_df, aes(DigEff, WtChange))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")+
geom_smooth(method=model, se=TRUE)
?cbind
predict(model, New, interval="prediction",level=0.90)
predict(model, 17, interval="prediction",level=0.90)
lines(x=DigEff , y=lwr)
lines(x=DigEff , y=intvls_df~lwr)
lines(x=intvls_df~DigEff , y=intvls_df~lwr)
attach(intvls_df)
head(intvls_df)
lines(x=DigEff , y=lwr)
# plotting linear model, Conf-Intvl, and Predict-Intvl on top of scatter plot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=1, lwd=2) # regression line
lines(x=DigEff , y=lwr)
intvls_df = cbind(df, conf, pred)
conf = predict(model, interval="confidence",level=0.90)
intvls_df = cbind(df, conf, pred)
View(conf)
View(pred)
View(intvls_df)
View(model)
rm(CARP)
rm(modelQuad)
lines(x=DigEff , y=lwr)
attach(intvls_df)
head(intvls_df)
lines(x=DigEff , y=lwr)
rm(intvls_df)
intvls_df = cbind(df, conf)
names(intvls_df)[names(intvls_df) == 'fit'] <- 'fit.conf'
names(intvls_df)[names(intvls_df) == 'lwr'] <- 'lwr.conf'
names(intvls_df)[names(intvls_df) == 'upr'] <- 'upr.conf'
intvls_df = cbind(intvls_df, pred)
head(intvls_df)
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=1, lwd=2) # regression line
lines(x=DigEff , y=lwr)
lines(x=DigEff , y=lwr.conf)
attach(intvls_df)
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=1, lwd=2) # regression line
lines(x=DigEff , y=lwr.conf)
lines(x=DigEff , y=upr.conf)
lines(x=DigEff , y=lwr)
lines(x=DigEff , y=upr)
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
abline(model, col="Red", lty=1, lwd=2) # regression line
lines(x=DigEff , y=lwr.conf, col="Orange", lty=1, lwd=2)
lines(x=DigEff , y=upr.conf, col="Orange", lty=1, lwd=2)
lines(x=DigEff , y=lwr)
lines(x=DigEff , y=upr)
# scatterplot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange",
col="blue", pch=19)
#linear model
abline(model, col="Red", lty=1, lwd=2) # regression line
# Conf and Predict Intvls
lines(x=DigEff , y=lwr.conf, col="Orange", lty=1, lwd=2)
lines(x=DigEff , y=upr.conf, col="Orange", lty=1, lwd=2)
lines(x=DigEff , y=lwr)
lines(x=DigEff , y=upr)
# scatterplot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "Scatterplot of DigEff  vs. WtChange with Confidence and Prediction Intervals",
col="blue", pch=19)
# scatterplot
plot(x=DigEff, y=WtChange,
ylab = "Weight Change",
xlab = "Digestion efficiency",
main = "DigEff vs. WtChange w Conf. and Predict. Intervals",
col="blue", pch=19)
#linear model
abline(model, col="Red", lty=1, lwd=2) # regression line
# Conf and Predict Intvls
lines(x=DigEff , y=lwr.conf, col="Orange", lty=1, lwd=2)
lines(x=DigEff , y=upr.conf, col="Orange", lty=1, lwd=2)
lines(x=DigEff , y=lwr)
lines(x=DigEff , y=upr)
summary(model)
rm(QUAD)
rm(x)
